<!-- COMANDOS PARA ACESSAR O PROJETO PELO DOCKER -->

1.Primeiro, baixe a imagem oficial do MYSQL do Docker Hub. Abra o terminal e execute:
docker pull mysql:latest

2.Agora, você pode criar um container com o MySQL:
docker run --name mysql-container -e MYSQL_ROOT_PASSWORD=12345 -p 3306:3306 -d mysql:latest

3.Para verificar se o container está executando, execute o comando: 
docker ps
3.1.Caso não estiver executando, execute: 
docker ps -a

3.2. Agora, vamos executar o container com seguinte comando:
docker start [ID do container]


4.Agora, vamos acessar o MYSQL dentro do container:
docker exec -it mysql-container mysql -u root -p

5.Caso optar por dígitar o código a mão para criar as tabelas dentro do docker, vou disponibilizar o código SQL aqui em baixo. Caso NÃO, ignorar e partir para próximo passo á baixo:

<!-- TABELA DE CLIENTES -->
CREATE TABLE `clientes` (
  `id` INT AUTO_INCREMENT PRIMARY KEY,
  `nome` varchar(100) NOT NULL,
  `email` varchar(100) NOT NULL,
  `telefone` varchar(15) DEFAULT NULL,
  `nascimento` date DEFAULT NULL,
  `data` datetime NOT NULL DEFAULT current_timestamp(),
  `senha` longtext NOT NULL,
  `unidade` varchar(50) DEFAULT NULL,
  `assinatura` longtext DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

<!-- TABELA DE PACIENTES -->

CREATE TABLE `pacientes` (
  `ID` INT AUTO_INCREMENT PRIMARY KEY,
  `nome` varchar(100) NOT NULL,
  `email` varchar(100) NOT NULL,
  `endereco` varchar(100) NOT NULL,
  `CEP` int(50) DEFAULT NULL,
  `cidade` text DEFAULT NULL,
  `telefone` varchar(15) NOT NULL,
  `sexo` varchar(100) NOT NULL,
  `data` datetime DEFAULT NULL ON UPDATE current_timestamp(),
  `nascimento` date NOT NULL,
  `CRM` varchar(100) NOT NULL,
  `Convenio` varchar(100) DEFAULT NULL,
  `diagnostico` longtext DEFAULT NULL,
  `medicamentos` longtext DEFAULT NULL,
  `observacoes` longtext DEFAULT NULL,
  `RG` int(100) DEFAULT NULL,
  `CPF` int(100) DEFAULT NULL,
  `nome_mae` longtext DEFAULT NULL,
  `id_user` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

<!-- TABELA DE EXAMES -->
CREATE TABLE `pacientes_exames` (
  `id` INT AUTO_INCREMENT PRIMARY KEY,
  `paciente_id` int(11) NOT NULL,
  `exame_id` int(11) NOT NULL,
  `resultado` int(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

<!-- TABELA PACIENTES EXAMES -->
CREATE TABLE `pacientes_exames` (
  `id` int(11) NOT NULL,
  `paciente_id` int(11) NOT NULL,
  `exame_id` int(11) NOT NULL,
  `resultado` int(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

<!-- INSERÇÃO DE DADOS PARA ACESSAR O SISTEMA *OBRIGATORIO* PARA FAZER LOGIN -->
INSERT INTO `clientes` (`id`, `nome`, `email`, `telefone`, `nascimento`, `data`, `senha`, `unidade`, `assinatura`) VALUES
(46, 'José Guilherme Santos Silva', 'admin@admin.com', '11995910318', '2001-03-12', '2024-01-16 14:00:05', '$2y$10$KXKZ1xev.tnfU6yplONhM.a/pZBrG/my.2Zh/pX9Eq9S3Doi/KLdu', 'Cotia', NULL);

6.Agora vou mostrar como inserir as tabelas no banco de dados pelo PhpAdmin. Primeiro vamos criar uma container no docker para o php admin, com seguind comando:
docker run --name phpmyadmin --link mysql-container:db -p 8080:80 -d phpmyadmin/phpmyadmin 

7.Após criar o container, e ambos estiver rodando, vamos acessar a interface do PHPAdmin na web.
http://localhost:8080

usuario: root
senha: 12345

8. Vamos puxar o arquivo disponível na pasta SQL dentro desse template para dentro do SQL e pronto, vão puxar todas tabelas e informações necessárias. 